angular.module("ngFabForm",[]),angular.module("ngFabForm").directive("form",["$compile","$timeout","ngFabForm",function(a,b,c){"use strict";var d=function(a){a.preventDefault(),a.stopPropagation(),a.stopImmediatePropagation()},e=function(a,b){if(b.disableForm){a.wrapInner("<fieldset>");var c=a.children();b.$observe("disableForm",function(){"true"===b.disableForm||b.disableForm===!0?c.attr("disabled",!0):c.removeAttr("disabled")})}},f=function(a,b,c,d){var e=a[0].querySelector(".ng-invalid");if(e&&b.$invalid){var f=e.offsetTop+d;if(window.$&&c){var g=c,h=angular.element(e);h.addClass("is-scroll-target"),c&&("smooth"===c&&(g=Math.abs(window.scrollY-f)/4+200),$("html, body").animate({scrollTop:f},g,function(){h.focus(),h.removeClass("is-scroll-target")}))}else window.scrollTo(0,f),e.focus()}};return{restrict:"E",scope:!1,require:"form",compile:function(a,g){var h,i,j,k=angular.copy(c.config),l=k.preventDoubleSubmitTimeoutLength;return!g.novalidate&&k.setNovalidate&&(a.attr("novalidate",!0),g.novalidate=!0),a.bind("submit",function(c){k.setFormDirtyOnSubmit&&i.$apply(function(){h.$triedSubmit=!0}),k.preventInvalidSubmit&&!h.$valid?d(c):k.preventDoubleSubmit&&(h.$preventDoubleSubmit&&d(c),j&&b.cancel(j),h.$preventDoubleSubmit=!0,j=b(function(){h.$preventDoubleSubmit=!1},l)),k.scrollToAndFocusFirstErrorOnSubmit&&f(a,h,k.scrollAnimationTime,k.scrollOffset)}),function(a,c,d,f){h=f,i=a,k.disabledForms&&e(c,d),a.$on("$destroy",function(){j&&b.cancel(j)})}}}}]),angular.module("ngFabForm").directive("maxFileSize",["maxUploadSizeInByte",function(a){"use strict";var b={maxUploadSizeInByte:a,validationKey:"maxFileSize"};return{restrict:"A",require:"?ngModel",scope:{ngModel:"=",maxFileSize:"@"},link:function(a,c,d,e){var f;f=!a.maxFileSize||parseFloat(a.maxFileSize)>0?b.maxUploadSizeInByte:a.maxFileSize,a.$watch("ngModel",function(c){if(c instanceof Array){e.$setViewValue(c);for(var d=!0,g=0;g<a.ngModel.length;g++){var h=a.ngModel[g];if(h.size>f){d=!1;break}}e.$setValidity(b.validationKey,d)}else e.$setValidity(b.validationKey,!0)},!0)}}}]),angular.module("ngFabForm").directive("input",["ngFabFormDirective",function(a){"use strict";return a}]),angular.module("ngFabForm").directive("textarea",["$compile","ngFabFormDirective",function(a,b){"use strict";return b}]),angular.module("ngFabForm").directive("select",["ngFabFormDirective",function(a){"use strict";return a}]),angular.module("ngFabForm").factory("ngFabFormDirective",["ngFabForm","$compile","$templateRequest","$rootScope",function(a,b,c,d){"use strict";return{restrict:"E",require:["?^form","?ngModel"],compile:function(e,f){if(a.config.setNamesByNgModel&&f.ngModel&&!f.name){var g=f.ngModel.replace(/\./g,"_");e.attr("name",g),f.name=g}return function(e,f,g,h){var i=h[0],j=h[1],k=a.config.validationsTemplate;if(a.config.showValidationMsgs&&i&&j&&k&&0!==Object.keys(j.$validators).length&&c(k).then(function(c){c=a.addCustomValidations(c,j.$validators,g);var h=d.$new(!0);h.attrs=g,h.form=e[i.$name],h.field=e[i.$name][j.$name];var k=b(c)(h);a.insertErrorTpl(k,f,g)}),a.config.setAsteriskForRequiredLabel&&g.required===!0){if(!window.$)throw"auto-setting an asterisk requires jQuers";var l=$("label[for="+g.name+"]");l.length<1&&(l=f.prev("label")),l&&l[0]&&"radio"!==g.type&&"checkbox"!==g.type&&(l[0].innerText=l[0].innerText+a.config.asteriskStr)}}}}}]),angular.module("ngFabForm").provider("ngFabForm",function(){"use strict";var a={validationsTemplate:"default-validation-msgs.html",showValidationMsgs:!0,preventInvalidSubmit:!0,preventDoubleSubmit:!0,preventDoubleSubmitTimeoutLength:1e3,setFormDirtyOnSubmit:!0,scrollToAndFocusFirstErrorOnSubmit:!0,scrollAnimationTime:"smooth",scrollOffset:-100,disabledForms:!0,setNovalidate:!0,setNamesByNgModel:!0,setAsteriskForRequiredLabel:!1,asteriskStr:"*",validationMsgPrefix:"validationMsg"},b=function(a,b,c){"checkbox"===c.type||"radio"===c.type?b.parent().after(a):b.after(a)},c=function(b,c,d){var e=angular.element("<div/>").html(b);return angular.forEach(d,function(b,c){var d=new RegExp(a.validationMsgPrefix);if(c.match(d)){var f=c.replace(a.validationMsgPrefix,"");f=f.charAt(0).toLowerCase()+f.slice(1);var g=e.find('[ng-message="'+f+'"]');g.text(b)}}),e};return{extendConfig:function(b){a=angular.extend(a,b)},setInsertErrorTplFn:function(a){b=a},$get:function(){return{insertErrorTpl:b,addCustomValidations:c,config:a}}}}),angular.module("ngFabForm").run(["$templateCache",function(a){"use strict";a.put("default-validation-msgs.html",'<div ng-messages="field.$error"\n     class="validation">\n    <ul class="list-unstyled validation-errors"\n        ng-show="field.$invalid && (field.$touched || field.$dirty || form.$triedSubmit)">\n        <li ng-message="required">This field is required</li>\n        <li ng-message="password">This is not a valid password</li>\n        <li ng-message="email"> This is not a valid email-address</li>\n        <li ng-message="pattern">Your input does not match the requirements</li>\n        <li ng-message="date">This is not a valid date</li>\n        <li ng-message="time">This is not a valid time</li>\n        <li ng-message="datetime"> This is no valid datetime</li>\n        <li ng-message="datetime-local">This is no valid local datetime</li>\n        <li ng-message="number">This is no valid number</li>\n        <li ng-message="color">This no valid color</li>\n        <li ng-message="range">This is not a valid range</li>\n        <li ng-message="month">This is not a valid month</li>\n        <li ng-message="url">This is not a valid url</li>\n        <li ng-message="file">This not a valid file</li>\n\n        <li ng-message="minlength">Your field should have at least {{ attrs.minlength }} characters</li>\n        <li ng-message="maxlength">Your field should have max {{ attrs.maxlength }} characters</li>\n\n        <li ng-if="attrs.type == \'time\' "\n            ng-message="min">The time provided should be no earlier than {{ attrs.min |date: \'HH:MM\' }}\n        </li>\n        <li ng-message="max"\n            ng-if="attrs.type == \'time\' ">The time should be no later than {{attrs.max |date: \'HH:MM\'}}\n        </li>\n        <li ng-message="min"\n            ng-if="attrs.type == \'date\' ">The date provided should be no earlier than then {{attrs.max\n            |date:\'dd.MM.yy\'}}\n        </li>\n        <li ng-message="max"\n            ng-if="attrs.type == \'date\' ">The time should be no later than {{attrs.max |date: \'dd.MM.yy\'}}\n        </li>\n    </ul>\n    <div class="validation-success"\n         ng-show="field.$valid && !field.$invalid">\n    </div>\n</div>\n')}]),angular.module("ngFabForm").directive("ngFabVal",function(){"use strict";return{restrict:"E",scope:{},templateUrl:"ng-fab-val-d.html",link:function(){}}});