angular.module("ngFabForm",[]),angular.module("ngFabForm").directive("form",["$compile","$timeout","ngFabForm",function(a,b,c){"use strict";function d(a){a.preventDefault(),a.stopPropagation(),a.stopImmediatePropagation()}function e(a){for(var b,c,d=arguments,e=d.length;e>1&&a.length;)for(b=d[--e];-1!==(c=a.indexOf(b));)a.splice(c,1);return a}function f(a,b){if(b.disableForm){a.wrapInner("<fieldset>");var c=a.children();b.$observe("disableForm",function(){"true"===b.disableForm||b.disableForm===!0?c.attr("disabled",!0):c.removeAttr("disabled")})}}function g(a,b,c,d){var e=a[0].querySelector(".ng-invalid");if(e&&b.$invalid){var f=e.offsetTop+d;if(window.$&&c){var g=c,h=angular.element(e);h.addClass("is-scroll-target"),c&&("smooth"===c&&(g=Math.abs(window.scrollY-f)/4+200),g=parseInt(g),$("html, body").animate({scrollTop:f},g,function(){h.focus(),h.removeClass("is-scroll-target")}))}else e.scrollIntoView(),e.focus()}}var h=[];return{restrict:"E",scope:!1,require:"form",compile:function(a,i){var j,k,l,m=angular.copy(c.config);return!i.novalidate&&m.setNovalidate&&(a.attr("novalidate",!0),i.novalidate=!0),a.bind("submit",function(c){m.setFormDirtyOnSubmit&&k.$apply(function(){j.$triedSubmit=!0}),m.preventInvalidSubmit&&!j.$valid?d(c):m.preventDoubleSubmit&&(j.$preventDoubleSubmit&&d(c),l&&b.cancel(l),j.$preventDoubleSubmit=!0,l=b(function(){j.$preventDoubleSubmit=!1},m.preventDoubleSubmitTimeoutLength)),m.scrollToAndFocusFirstErrorOnSubmit&&g(a,j,m.scrollAnimationTime,m.scrollOffset)}),function(a,c,d,g){if(j=g,k=a,g.$triedSubmit=!1,g.$preventDoubleSubmit=!1,g.ngFabFormConfig=m,!g.$name)throw"ngFabForm: all forms should have a unique name set";if(h.indexOf(g.$name)>-1)throw'ngFabForm: duplicate form name "'+g.$name+'"';h.push(g.$name),m.disabledForms&&f(c,d),d.ngFabFormOptions&&a.$watch(d.ngFabFormOptions,function(b){if(b){var c=angular.copy(m);m=g.ngFabFormConfig=angular.extend(m,b),a.$broadcast("NG_FAB_FORM_OPTIONS_CHANGED_FOR_"+g.$name,m,c)}},!0),a.$on("$destroy",function(){l&&b.cancel(l),e(h,g.$name)})}}}}]),angular.module("ngFabForm").directive("maxFileSize",["maxUploadSizeInByte",function(a){"use strict";var b={maxUploadSizeInByte:a,validationKey:"maxFileSize"};return{restrict:"A",require:"?ngModel",scope:{ngModel:"=",maxFileSize:"@"},link:function(a,c,d,e){var f;f=!a.maxFileSize||parseFloat(a.maxFileSize)>0?b.maxUploadSizeInByte:a.maxFileSize,a.$watch("ngModel",function(c){if(c instanceof Array){e.$setViewValue(c);for(var d=!0,g=0;g<a.ngModel.length;g++){var h=a.ngModel[g];if(h.size>f){d=!1;break}}e.$setValidity(b.validationKey,d)}else e.$setValidity(b.validationKey,!0)},!0)}}}]),angular.module("ngFabForm").directive("input",["ngFabFormDirective",function(a){"use strict";return a}]),angular.module("ngFabForm").directive("textarea",["$compile","ngFabFormDirective",function(a,b){"use strict";return b}]),angular.module("ngFabForm").directive("select",["ngFabFormDirective",function(a){"use strict";return a}]),angular.module("ngFabForm").factory("ngFabFormDirective",["ngFabForm","$compile","$templateRequest","$rootScope","$timeout",function(a,b,c,d,e){"use strict";function f(e){var f=e.scope,g=e.el,h=e.cfg,i=e.formCtrl,j=e.ngModelCtrl,k=e.attrs;e.currentValidationVars.tpl&&0!==Object.keys(e.currentValidationVars.tpl).length&&e.currentValidationVars.tpl.remove(),c(h.validationsTemplate).then(function(c){c=a.addCustomValidations(c,j.$validators,k);var h=d.$new(!0);h.attrs=k,h.form=f[i.$name],h.field=f[i.$name][j.$name];var l=b(c)(h);e.currentValidationVars.tpl=l[0],a.insertErrorTpl(l[0],g,k)})}function g(a,b,c){if(!window.$)throw"auto-setting an asterisk requires jQuery";var d=$("label[for="+b.name+"]");d.length<1&&(d=a.prev("label")),d&&d[0]&&"radio"!==b.type&&"checkbox"!==b.type&&(d[0].innerText=d[0].innerText+c.asteriskStr)}return{restrict:"E",require:["?^form","?ngModel"],compile:function(b,c){if(!c.type||"submit"!==c.type.toLowerCase()&&"button"!==c.type.toLowerCase()){if(a.config.setNamesByNgModel&&c.ngModel&&!c.name){var d=c.ngModel.replace(/\./g,"_");b.attr("name",d),c.name=d}return function(a,b,c,d){function h(d){j&&(!k||!i.validationsTemplate||0===Object.keys(k.$validators).length||d&&i.validationsTemplate===d.validationsTemplate?!i.validationsTemplate&&l.tpl&&0!==Object.keys(l.tpl).length&&l.tpl.remove():f({scope:a,el:b,cfg:i,formCtrl:j,ngModelCtrl:k,attrs:c,currentValidationVars:l}),!i.setAsteriskForRequiredLabel||c.required!==!0||d&&i.setAsteriskForRequiredLabel===d.setAsteriskForRequiredLabel&&i.asteriskStr===d.asteriskStr||g(b,c,i))}var i,j=d[0],k=d[1],l={tpl:void 0};e(function(){i||(i=j.ngFabFormConfig),h()},0),a.$on("NG_FAB_FORM_OPTIONS_CHANGED_FOR_"+j.$name,function(a,b,c){i=b,h(c)})}}}}}]),angular.module("ngFabForm").provider("ngFabForm",function(){"use strict";var a={validationsTemplate:"default-validation-msgs.html",preventInvalidSubmit:!0,preventDoubleSubmit:!0,preventDoubleSubmitTimeoutLength:1e3,setFormDirtyOnSubmit:!0,scrollToAndFocusFirstErrorOnSubmit:!0,scrollAnimationTime:"smooth",scrollOffset:-100,disabledForms:!0,setNovalidate:!0,setNamesByNgModel:!0,setAsteriskForRequiredLabel:!1,asteriskStr:"*",validationMsgPrefix:"validationMsg"},b=function(a,b,c){"checkbox"===c.type||"radio"===c.type?b.parent().after(a):b.after(a)},c=function(b,c,d){var e=angular.element("<div/>").html(b);return angular.forEach(d,function(b,c){var d=new RegExp(a.validationMsgPrefix);if(c.match(d)){var f=c.replace(a.validationMsgPrefix,"");f=f.charAt(0).toLowerCase()+f.slice(1);var g=e.find('[ng-message="'+f+'"]');g.text(b)}}),e};return{extendConfig:function(b){a=angular.extend(a,b)},setInsertErrorTplFn:function(a){b=a},$get:function(){return{insertErrorTpl:b,addCustomValidations:c,config:a}}}}),angular.module("ngFabForm").run(["$templateCache",function(a){"use strict";a.put("default-validation-msgs.html",'<div ng-messages="field.$error"\n     class="validation">\n    <ul class="list-unstyled validation-errors"\n        ng-show="field.$invalid && (field.$touched || field.$dirty || form.$triedSubmit)">\n        <li ng-message="required">This field is required</li>\n        <li ng-message="password">This is not a valid password</li>\n        <li ng-message="email"> This is not a valid email-address</li>\n        <li ng-message="pattern">Your input does not match the requirements</li>\n        <li ng-message="date">This is not a valid date</li>\n        <li ng-message="time">This is not a valid time</li>\n        <li ng-message="datetime"> This is no valid datetime</li>\n        <li ng-message="datetime-local">This is no valid local datetime</li>\n        <li ng-message="number">This is no valid number</li>\n        <li ng-message="color">This no valid color</li>\n        <li ng-message="range">This is not a valid range</li>\n        <li ng-message="month">This is not a valid month</li>\n        <li ng-message="url">This is not a valid url</li>\n        <li ng-message="file">This not a valid file</li>\n\n        <li ng-message="minlength">Your field should have at least {{ attrs.minlength }} characters</li>\n        <li ng-message="maxlength">Your field should have max {{ attrs.maxlength }} characters</li>\n\n        <li ng-if="attrs.type == \'time\' "\n            ng-message="min">The time provided should be no earlier than {{ attrs.min |date: \'HH:MM\' }}\n        </li>\n        <li ng-message="max"\n            ng-if="attrs.type == \'time\' ">The time should be no later than {{attrs.max |date: \'HH:MM\'}}\n        </li>\n        <li ng-message="min"\n            ng-if="attrs.type == \'date\' ">The date provided should be no earlier than then {{attrs.max\n            |date:\'dd.MM.yy\'}}\n        </li>\n        <li ng-message="max"\n            ng-if="attrs.type == \'date\' ">The time should be no later than {{attrs.max |date: \'dd.MM.yy\'}}\n        </li>\n    </ul>\n    <div class="validation-success"\n         ng-show="field.$valid && !field.$invalid">\n    </div>\n</div>\n')}]),angular.module("ngFabForm").directive("ngFabVal",function(){"use strict";return{restrict:"E",scope:{},templateUrl:"ng-fab-val-d.html",link:function(){}}});